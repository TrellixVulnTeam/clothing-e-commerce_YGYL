{"ast":null,"code":"import firebase from \"firebase/app\";\nimport 'firebase/firestore';\nimport 'firebase/auth'; //Collected from google firebase, it is how firebase knows that the application\n//is connected to your firebase account and database\n\nconst config = {\n  apiKey: \"AIzaSyDW1FCUR-z0EoDLyfNIbICaxpXJZipV-Zo\",\n  authDomain: \"clothing-db-5732c.firebaseapp.com\",\n  projectId: \"clothing-db-5732c\",\n  storageBucket: \"clothing-db-5732c.appspot.com\",\n  messagingSenderId: \"405758138715\",\n  appId: \"1:405758138715:web:0132c5826113f0a903a27e\",\n  measurementId: \"G-0NSZD119XH\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return; //if the user doesn't exist, do nothing\n\n  const userRef = firestore.doc('users/128adasg');\n  const snapShot = await userRef.get(); //it returns the document including a property \"exists\" to say if it exist or not\n\n  console.log(snapShot);\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider(); //trigger google pop up whenever we use the google auth provider for authentication and sign in\n\nprovider.setCustomParameters({\n  prompt: 'select_account'\n}); //uses the google pop up\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider); //in case we want the whole library\n\nexport default firebase;","map":{"version":3,"sources":["/Users/patry/react_projects/clothing-e-commerce/clothing-e-commerce/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","snapShot","get","console","log","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AAEA,OAAO,oBAAP;AACA,OAAO,eAAP,C,CAEA;AACA;;AACA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,mCAFD;AAGXC,EAAAA,SAAS,EAAE,mBAHA;AAIXC,EAAAA,aAAa,EAAE,+BAJJ;AAKXC,EAAAA,iBAAiB,EAAE,cALR;AAMXC,EAAAA,KAAK,EAAE,2CANI;AAOXC,EAAAA,aAAa,EAAE;AAPJ,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAG,CAACD,QAAJ,EAAc,OAD6D,CACrD;;AAEtB,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAc,gBAAd,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB,CAL2E,CAKrC;;AAEtCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAED,CATM;AAWPf,QAAQ,CAACmB,aAAT,CAAuBlB,MAAvB;AAEA,OAAO,MAAMmB,IAAI,GAAGpB,QAAQ,CAACoB,IAAT,EAAb;AACP,OAAO,MAAMP,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,MAAMQ,QAAQ,GAAG,IAAIrB,QAAQ,CAACoB,IAAT,CAAcE,kBAAlB,EAAjB,C,CAEA;;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B,E,CAEA;;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B,C,CAEP;;AACA,eAAerB,QAAf","sourcesContent":["import firebase from \"firebase/app\";\n\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n//Collected from google firebase, it is how firebase knows that the application\n//is connected to your firebase account and database\nconst config = {\n    apiKey: \"AIzaSyDW1FCUR-z0EoDLyfNIbICaxpXJZipV-Zo\",\n    authDomain: \"clothing-db-5732c.firebaseapp.com\",\n    projectId: \"clothing-db-5732c\",\n    storageBucket: \"clothing-db-5732c.appspot.com\",\n    messagingSenderId: \"405758138715\",\n    appId: \"1:405758138715:web:0132c5826113f0a903a27e\",\n    measurementId: \"G-0NSZD119XH\"\n  };\n\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if(!userAuth) return; //if the user doesn't exist, do nothing\n\n  const userRef = firestore.doc('users/128adasg');\n\n  const snapShot = await userRef.get(); //it returns the document including a property \"exists\" to say if it exist or not\n\n  console.log(snapShot);\n\n}\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\n\n//trigger google pop up whenever we use the google auth provider for authentication and sign in\nprovider.setCustomParameters({prompt: 'select_account'});\n\n//uses the google pop up\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n//in case we want the whole library\nexport default firebase;"]},"metadata":{},"sourceType":"module"}