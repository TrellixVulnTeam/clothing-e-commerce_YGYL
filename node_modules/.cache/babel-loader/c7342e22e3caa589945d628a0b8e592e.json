{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; //tells redux persist to store in the local window browser\n\nimport userReducer from \"./user/user.reducer\";\nimport cartReducer from \"./cart/cart.reducer\";\nimport directoryReducer from \"./directory/directory.reducer\"; //just a json object that informs redux to start storing from the root in the path storage an arraylist containing the name of the reducer to be stored\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"cart\"] //can increase if needed\n\n};\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  directory: directoryReducer\n});\nexport default persistReducer(persistConfig, rootReducer);","map":{"version":3,"sources":["/Users/patry/react_projects/clothing-e-commerce/clothing-e-commerce/src/redux/root-reducer.js"],"names":["combineReducers","persistReducer","storage","userReducer","cartReducer","directoryReducer","persistConfig","key","whitelist","rootReducer","user","cart","directory"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAiD;;AAEjD,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B,C,CAEA;;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBL,EAAAA,OAFoB;AAGpBM,EAAAA,SAAS,EAAE,CAAC,MAAD,CAHS,CAGC;;AAHD,CAAtB;AAMA,MAAMC,WAAW,GAAGT,eAAe,CAAC;AAClCU,EAAAA,IAAI,EAAEP,WAD4B;AAElCQ,EAAAA,IAAI,EAAEP,WAF4B;AAGlCQ,EAAAA,SAAS,EAAEP;AAHuB,CAAD,CAAnC;AAMA,eAAeJ,cAAc,CAACK,aAAD,EAAgBG,WAAhB,CAA7B","sourcesContent":["import { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; //tells redux persist to store in the local window browser\n\nimport userReducer from \"./user/user.reducer\";\nimport cartReducer from \"./cart/cart.reducer\";\nimport directoryReducer from \"./directory/directory.reducer\";\n\n//just a json object that informs redux to start storing from the root in the path storage an arraylist containing the name of the reducer to be stored\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"cart\"], //can increase if needed\n};\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  directory: directoryReducer,\n});\n\nexport default persistReducer(persistConfig, rootReducer);\n"]},"metadata":{},"sourceType":"module"}