{"ast":null,"code":"var _jsxFileName = \"/Users/patry/react_projects/clothing-e-commerce/clothing-e-commerce/src/components/cart-icon/cart-icon.component.jsx\";\nimport React from \"react\";\nimport \"./cart-icon.styles.scss\";\nimport { connect } from \"react-redux\";\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\nimport { selectCartItemsCount } from \"../../redux/cart/cart.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { ReactComponent as ShoppingIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/shopping-bag.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartIcon = ({\n  toggleCartHidden,\n  itemCount\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"cart-icon\",\n  onClick: toggleCartHidden,\n  children: [/*#__PURE__*/_jsxDEV(ShoppingIcon, {\n    className: \"shopping-icon\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"item-count\",\n    children: itemCount\n    /*display the quantity of items in the cart */\n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this); //this triggers the toggleCart to hidden or unhidden\n\n\n_c = CartIcon;\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n});\n\nconst mapStateToProps = createStructuredSelector({\n  /* state or {cart: { cartItems }} */\n  itemCount: selectCartItemsCount //calls the function from \"cart.selectors.js\"\n  //which sum the quantity of each item in the cart array, starting by 0\n\n  /*or \n  cartItems.reduce( \n    (accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity,\n    0\n  ),*/\n\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIcon);\n\nvar _c;\n\n$RefreshReg$(_c, \"CartIcon\");","map":{"version":3,"sources":["/Users/patry/react_projects/clothing-e-commerce/clothing-e-commerce/src/components/cart-icon/cart-icon.component.jsx"],"names":["React","connect","toggleCartHidden","selectCartItemsCount","createStructuredSelector","CartIcon","itemCount","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,yBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,oBAAT,QAAqC,iCAArC;AACA,SAASC,wBAAT,QAAyC,UAAzC;;;;AAIA,MAAMC,QAAQ,GAAG,CAAC;AAAEH,EAAAA,gBAAF;AAAoBI,EAAAA;AAApB,CAAD,kBACf;AAAK,EAAA,SAAS,EAAC,WAAf;AAA2B,EAAA,OAAO,EAAEJ,gBAApC;AAAA,0BACE,QAAC,YAAD;AAAc,IAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA,cAA8BI;AAAU;;AAAxC;AAAA;AAAA;AAAA;AAAA,UAFF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,C,CAOA;;;KAPMD,Q;;AAQN,MAAME,kBAAkB,GAAIC,QAAD,KAAe;AACxCN,EAAAA,gBAAgB,EAAE,MAAMM,QAAQ,CAACN,gBAAgB,EAAjB;AADQ,CAAf,CAA3B;;AAIA,MAAMO,eAAe,GAAGL,wBAAwB,CAAC;AAAE;AACjDE,EAAAA,SAAS,EAAEH,oBADoC,CACf;AAChC;;AACA;AACF;AACA;AACA;AACA;;AAPiD,CAAD,CAAhD;AAUA,eAAeF,OAAO,CAACQ,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CF,QAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport \"./cart-icon.styles.scss\";\nimport { connect } from \"react-redux\";\n\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\nimport { selectCartItemsCount } from \"../../redux/cart/cart.selectors\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport { ReactComponent as ShoppingIcon } from \"../../assets/shopping-bag.svg\";\n\nconst CartIcon = ({ toggleCartHidden, itemCount }) => (\n  <div className=\"cart-icon\" onClick={toggleCartHidden}>\n    <ShoppingIcon className=\"shopping-icon\" />\n    <span className=\"item-count\">{itemCount /*display the quantity of items in the cart */}</span>\n  </div>\n);\n\n//this triggers the toggleCart to hidden or unhidden\nconst mapDispatchToProps = (dispatch) => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden()),\n});\n\nconst mapStateToProps = createStructuredSelector({ /* state or {cart: { cartItems }} */\n  itemCount: selectCartItemsCount //calls the function from \"cart.selectors.js\"\n  //which sum the quantity of each item in the cart array, starting by 0\n  /*or \n  cartItems.reduce( \n    (accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity,\n    0\n  ),*/\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIcon);\n"]},"metadata":{},"sourceType":"module"}