{"ast":null,"code":"/*\n *Selectors can compute derived data, allowing Redux to store the minimal possible state.\n *Selectors are efficient. A selector is not recomputed unless one of its arguments changes.\n *Selectors are composable. They can be used as input to other selectors. \n */\nimport { createSelector } from \"reselect\"; //returns the user object from state\n\nconst selectUser = state => state.user;\n\nexport const selectCurrentUser = createSelector([selectUser], user => user.currentUser);","map":{"version":3,"sources":["/Users/patry/react_projects/clothing-e-commerce/clothing-e-commerce/src/redux/user/user.selectors.js"],"names":["createSelector","selectUser","state","user","selectCurrentUser","currentUser"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACC,SAASA,cAAT,QAA+B,UAA/B,C,CAEA;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAIA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE3CE,IAAI,IAAIA,IAAI,CAACE,WAF8B,CAAxC","sourcesContent":["/*\n *Selectors can compute derived data, allowing Redux to store the minimal possible state.\n *Selectors are efficient. A selector is not recomputed unless one of its arguments changes.\n *Selectors are composable. They can be used as input to other selectors. \n */\n import { createSelector } from \"reselect\";\n\n //returns the user object from state\n const selectUser = state => state.user;\n \n \n \n export const selectCurrentUser = createSelector(\n     [selectUser],\n     user => user.currentUser\n );"]},"metadata":{},"sourceType":"module"}